package Screens;

import Body.Flashcards;
import ConnectSQL.ConnectDAO;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.JOptionPane;

public class MeusFlashcards extends javax.swing.JFrame {

    static int idUser;

    public MeusFlashcards(int novoId) {
        initComponents();
        setIcon();

        idUser = novoId;
        preencherComboBox();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        voltar = new javax.swing.JButton();
        excluirLista = new javax.swing.JButton();
        renomearLista = new javax.swing.JButton();
        estudar = new javax.swing.JButton();
        editarCards = new javax.swing.JButton();
        criarLista = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox1.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 290, 950, 70));

        voltar.setContentAreaFilled(false);
        voltar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });
        getContentPane().add(voltar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, 80, 80));

        excluirLista.setContentAreaFilled(false);
        excluirLista.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        excluirLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirListaActionPerformed(evt);
            }
        });
        getContentPane().add(excluirLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 510, 280, 70));

        renomearLista.setContentAreaFilled(false);
        renomearLista.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        renomearLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renomearListaActionPerformed(evt);
            }
        });
        getContentPane().add(renomearLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 520, 280, 60));

        estudar.setContentAreaFilled(false);
        estudar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        estudar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estudarActionPerformed(evt);
            }
        });
        getContentPane().add(estudar, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 400, 240, 70));

        editarCards.setContentAreaFilled(false);
        editarCards.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        editarCards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarCardsActionPerformed(evt);
            }
        });
        getContentPane().add(editarCards, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 400, 240, 70));

        criarLista.setContentAreaFilled(false);
        criarLista.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        criarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarListaActionPerformed(evt);
            }
        });
        getContentPane().add(criarLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 400, 240, 70));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Meus flashcards.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 720));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        // botao voltar

        new Dashboard(idUser).setVisible(true);
        dispose();

    }//GEN-LAST:event_voltarActionPerformed

    private void excluirListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirListaActionPerformed
        // botao excluir
        String itemSelecionado = (String) jComboBox1.getSelectedItem();
        int escolha = JOptionPane.showOptionDialog(
                null,
                "VocÃª tem certeza de que deseja excluir a lista " + itemSelecionado + "?",
                "Excluir lista",
                JOptionPane.OK_CANCEL_OPTION,
                JOptionPane.WARNING_MESSAGE,
                null,
                new Object[]{"Excluir", "Cancelar"},
                "sim"
        );

        if (escolha == 0) {

            new ConnectDAO().deleteList(itemSelecionado, idUser);

        }

        preencherComboBox();

    }//GEN-LAST:event_excluirListaActionPerformed

    private void criarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarListaActionPerformed
        // TODO add your handling code here:

        new CriarLista(idUser).setVisible(true);
        dispose();
    }//GEN-LAST:event_criarListaActionPerformed

    private void renomearListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renomearListaActionPerformed
        // botao renomear lista

        Flashcards flashcards = new Flashcards();
        String itemSelecionado = (String) jComboBox1.getSelectedItem();

        if (itemSelecionado != null) {
            flashcards.setNameList(itemSelecionado);

            int listId = new ConnectDAO().GetIdList(flashcards);
            
            String novoNome = JOptionPane.showInputDialog("Digite um novo nome para a lista " + itemSelecionado);

            if (novoNome != null && !novoNome.trim().isEmpty()) {
                new ConnectDAO().AlterNameList(listId, novoNome);
                preencherComboBox();
            } else {
                JOptionPane.showMessageDialog(null, "Campo vazio", "Aviso!", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhuma lista selecionada", "Erro!", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_renomearListaActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void estudarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estudarActionPerformed
        // TODO add your handling code here:

        Flashcards flashcards = new Flashcards();
        String itemSelecionado = (String) jComboBox1.getSelectedItem();

        flashcards.setNameList(itemSelecionado);
        new EstudoLista(flashcards, idUser, itemSelecionado).setVisible(true);
        dispose();


    }//GEN-LAST:event_estudarActionPerformed

    private void editarCardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarCardsActionPerformed
        // TODO add your handling code here:

        Flashcards flashcards = new Flashcards();
        String itemSelecionado = (String) jComboBox1.getSelectedItem();
        flashcards.setNameList(itemSelecionado);
        new EditarCards(flashcards, itemSelecionado, idUser).setVisible(true);
        dispose();
    }//GEN-LAST:event_editarCardsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MeusFlashcards(idUser).setVisible(true);
            }
        });
    }

    public void preencherComboBox() {

        Flashcards flashcards = new Flashcards();
        flashcards.setIdUser(idUser);

        jComboBox1.removeAllItems();
        List<String> lista = new ConnectDAO().showList(flashcards);

        // Adiciona os dados ao JComboBox
        for (String item : lista) {
            jComboBox1.addItem(item);
        }
    }

    private void setIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("LogoIcon.png")));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton criarLista;
    private javax.swing.JButton editarCards;
    private javax.swing.JButton estudar;
    private javax.swing.JButton excluirLista;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton renomearLista;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
